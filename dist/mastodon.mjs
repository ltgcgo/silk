var l="currentTarget,explicitOriginalTarget,originalTarget,srcElement,target".split(",");var o={account:"user",application:"app",created_at:"atNew",edited_at:"atEdit",favourites_count:"sumFav",in_reply_to_account_id:"replyUser",in_reply_to_id:"replyPost",language:"lang",media_attachments:"media",mentions:"ats",reblog:"boost",reblogs_count:"sumBoost",replies_count:"sumReply",sensitive:"cwReal",spoiler_text:"cwText",followers_count:"sumFan",following_count:"sumSub"},d=class extends EventTarget{#l=40;#i=100;#c=2592e5;#o="";#a="";#u;#s=[];#r={};#p=[];#f=[];#E=[];#t=[];#e={};USER_NORMAL=0;USER_NOEXEMPT=1;USER_EXCLUDED=2;#d(t,s){return(s.atNew||0)-(t.atNew||0)}#g(){}#m(){}#w(){}#n(t){for(let s in t)o[s]&&(t[o[s]]=t[s],delete t[s]);return t.atNew&&(t.atNew=new Date(t.atNew).getTime()),t.atEdit&&(t.atEdit=new Date(t.atEdit).getTime()),t}#h(t,s){return this.#n(t),this.#n(t.user),t.ats?.forEach(e=>{this.#n(e)}),t?.user?.username&&(t.handle=`@${t.user.username}@${s.domain}`),t.rid=`${t.id}@${s.domain}`,t}receiver(t,s){switch(s.event){case"update":{let e=s.payload.constructor==String?JSON.parse(s.payload):s.payload;this.#h(e,t),this.#t.unshift(e),this.#e[e.rid]=e,console.error(`CREATE Post ${e.rid} success.`),this.dispatchEvent(new MessageEvent("postnew",{data:e}));break}case"status.update":{let e=JSON.parse(s.payload);if(this.#h(e,t),this.#e[e.rid]){let i=this.#t.indexOf(this.#e[e.rid]);i>-1?(this.#t[i]=e,this.#e[e.rid]=e,console.error(`MODIFY Post ${e.rid} success.`)):console.error(`MODIFY Post ${e.rid} not found in postStore.`)}else console.error(`MODIFY Post ${e.rid} not found in postRef.`);this.dispatchEvent(new MessageEvent("postedit",{data:e}));break}case"delete":{let e=`${s.payload}@${t.domain}`;if(this.#e[e]){let i=this.#t.indexOf(this.#e[e]);i>-1?(this.#t.splice(i,1),console.error(`DELETE Post ${e} success.`)):console.error(`DELETE Post ${e} not found in postStore.`)}else console.error(`DELETE Post ${e} not found in postRef.`);break}default:console.error(`Unknown message type ${s.event}.`)}this.#t.sort(this.#d),this.#t.length>this.#i&&this.#t.splice(this.#i,this.#t.length-this.#i).forEach(e=>{delete this.#e[e.rid]})}getPosts(){return this.#t}startFor(t){t.ws=new WebSocket(`wss://${t.domain}/api/v1/streaming/`),t.ws.addEventListener("open",()=>{t.ws.send('{"type":"subscribe","stream":"public:local"}'),t.domain==this.#o&&t.ws.send(`{"type":"subscribe","stream":"user","access_token":"${this.#a}"}`)}),t.ws.addEventListener("message",s=>{let e=JSON.parse(s.data);this.receiver.call(this,t,e)}),t.ws.addEventListener("close",()=>{AbortSignal.timeout(3e3).onabort=()=>{this.startFor(t)}}),console.info(`Started for ${t.domain}.`)}launch(t){this.#s.forEach(async s=>{if(console.info(`Starting for ${s.domain}.`),this.startFor.call(this,s),!t){let e={headers:{}};s.auth&&(e.headers.Authorization=`Bearer ${s.auth}`),(await(await fetch(`https://${s.domain}/api/v1/timelines/public?local=1&limit=${this.#l}`)).json())?.forEach(i=>{this.receiver(s,{event:"update",payload:i})})}})}constructor({servers:t,serversCw:s,instance:e,accessToken:i,serversTk:a,streamOnly:h=!1}){super(),t?.forEach(r=>{let n={domain:r,ws:void 0,cw:!1};this.#r[r]=this.#s.length,this.#s.push(n)}),s?.forEach(r=>{let n={domain:r,ws:void 0,cw:!0};this.#r[r]=this.#s.length,this.#s.push(n)}),a?.forEach(r=>{this.#s[this.#r[r[0]]].auth=r[1]}),this.#o=e,this.#a=i,this.launch(h)}};export{d as MastodonClient};
