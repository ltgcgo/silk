var a="currentTarget,explicitOriginalTarget,originalTarget,srcElement,target".split(",");var o={account:"user",application:"app",created_at:"atNew",edited_at:"atEdit",favourites_count:"sumFav",in_reply_to_account_id:"replyUser",in_reply_to_id:"replyPost",language:"lang",media_attachments:"media",mentions:"ats",reblog:"boost",reblogs_count:"sumBoost",replies_count:"sumReply",sensitive:"cwReal",spoiler_text:"cwText",followers_count:"sumFan",following_count:"sumSub"},h=class extends EventTarget{#l=40;#s=100;#d=2592e5;#n="";#o="";#c;#i=[];#u=[];#p=[];#f=[];#t=[];#e={};USER_NORMAL=0;USER_NOEXEMPT=1;USER_EXCLUDED=2;#h(t,s){return(s.created||0)-(t.created||0)}#E(){}#g(){}#m(){}#r(t){for(let s in t)o[s]&&(t[o[s]]=t[s],delete t[s]);return t.atNew&&(t.atNew=new Date(t.atNew).getTime()),t.atEdit&&(t.atEdit=new Date(t.atEdit).getTime()),t}#a(t,s){return this.#r(t),this.#r(t.user),t.ats?.forEach(e=>{this.#r(e)}),t?.user?.username&&(t.handle=`@${t.user.username}@${s.domain}`),t.rid=`${t.id}@${s.domain}`,t}receiver(t,s){switch(s.event){case"update":{let e=JSON.parse(s.payload);this.#a(e,t),this.#t.unshift(e),this.#e[e.rid]=e,console.error(`CREATE Post ${e.rid} success.`),this.dispatchEvent(new MessageEvent("postnew",{data:e}));break}case"status.update":{let e=JSON.parse(s.payload);if(this.#a(e,t),this.#e[e.rid]){let i=this.#t.indexOf(this.#e[e.rid]);i>-1?(this.#t[i]=e,this.#e[e.rid]=e,console.error(`MODIFY Post ${e.rid} success.`)):console.error(`MODIFY Post ${e.rid} not found in postStore.`)}else console.error(`MODIFY Post ${e.rid} not found in postRef.`);this.dispatchEvent(new MessageEvent("postedit",{data:e}));break}case"delete":{let e=`${s.payload}@${t.domain}`;if(this.#e[e]){let i=this.#t.indexOf(this.#e[e]);i>-1?(this.#t.splice(i,1),console.error(`DELETE Post ${e} success.`)):console.error(`DELETE Post ${e} not found in postStore.`)}else console.error(`DELETE Post ${e} not found in postRef.`);break}default:console.error(`Unknown message type ${s.event}.`)}this.#t.sort(this.#h),this.#t.length>this.#s&&this.#t.splice(this.#s,this.#t.length-this.#s).forEach(e=>{delete this.#e[e.rid]})}getPosts(){return this.#t}startFor(t){t.ws=new WebSocket(`wss://${t.domain}/api/v1/streaming/`),t.ws.addEventListener("open",()=>{t.ws.send('{"type":"subscribe","stream":"public:local"}'),t.domain==this.#n&&t.ws.send(`{"type":"subscribe","stream":"user","access_token":"${this.#o}"}`)}),t.ws.addEventListener("message",s=>{let e=JSON.parse(s.data);this.receiver.call(this,t,e)}),t.ws.addEventListener("close",()=>{AbortSignal.timeout(3e3).onabort=()=>{this.startFor(t)}}),console.info(`Started for ${t.domain}.`)}launch(){this.#i.forEach(t=>{console.info(`Starting for ${t.domain}.`),this.startFor.call(this,t)})}constructor({servers:t,serversCw:s,instance:e,accessToken:i}){super(),t?.forEach(r=>{let n={domain:r,ws:void 0,cw:!1};this.#i.push(n)}),s?.forEach(r=>{let n={domain:r,ws:void 0,cw:!0};this.#i.push(n)}),this.#n=e,this.#o=i,this.launch()}};export{h as MastodonClient};
