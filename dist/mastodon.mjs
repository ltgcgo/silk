var u="currentTarget,explicitOriginalTarget,originalTarget,srcElement,target".split(",");var l={account:"user",application:"app",content:"text",created_at:"atNew",edited_at:"atEdit",favourites_count:"sumFav",in_reply_to_account_id:"replyUser",in_reply_to_id:"replyPost",language:"lang",media_attachments:"media",mentions:"ats",reblog:"boost",reblogs_count:"sumBoost",replies_count:"sumReply",sensitive:"cwReal",spoiler_text:"cwText",visibility:"access",followers_count:"sumFan",following_count:"sumSub",display_name:"dispName",avatar_static:"avatarStatic",header_static:"headerStatic",statuses_count:"sumPost",last_status_at:"atLastPost",noindex:"noIndex",verified_at:"atVerify",shortcode:"code",static_url:"static",visible_in_picker:"inPicker",expires_at:"atExpire",votes_count:"sumVote",voters_count:"sumVoter",website:"site",preview_url:"preview",remote_url:"remote",preview_remote_url:"previewRemote",text_url:"text",description:"alt"},h={update:"postNew","status.update":"postEdit",delete:"postDel"},c={maxAge:2592e5,maxCount:100,pageSize:40},d=class extends EventTarget{#a=100;#h=2592e5;#n="";#u;#i=[];#r={};#d=[];#f=[];#p=[];#e=[];#s={};#o=!1;USER_NORMAL=0;USER_NOEXEMPT=1;USER_EXCLUDED=2;filePath="";#l(e,t){return(t.atNew||0)-(e.atNew||0)}#m(){}#E(){}#w(){}#t(e){for(let t in e)l[t]&&(e[l[t]]=e[t],delete e[t]);return e.atNew&&(e.atNew=new Date(e.atNew).getTime()),e.atEdit&&(e.atEdit=new Date(e.atEdit).getTime()),e.atVerify&&(e.atVerify=new Date(e.atVerify).getTime()),e.atExpire&&(e.atExpire=new Date(e.atExpire).getTime()),e.app&&this.#t(e.app),e.user&&this.#t(e.user),e.media?.forEach(t=>{this.#t(t)}),e.emojis?.forEach(t=>{this.#t(t)}),e.ats?.forEach(t=>{this.#t(t)}),e.user&&e.user.fields?.forEach(t=>{this.#t(t)}),e.poll&&(e.poll.options?.forEach(t=>{this.#t(t)}),this.#t(e.poll)),e}#c(e,t){return this.#t(e),e?.user?.username&&(e.handle=`@${e.user.username}@${t.domain}`),e.rid=`${e.id}@${t.domain}`,e}receiver(e,t){let s,a=!0,o=Date.now(),n=o-c.maxAge;switch(t.event){case"update":case"status.update":{let i=t.payload.constructor==String?JSON.parse(t.payload):t.payload;if(this.#c(i,e),i.atNew<n){a=!1;break}if(this.#s[i.rid]){let r=this.#e.indexOf(this.#s[i.rid]);r>-1&&(this.#e[r]=i,this.#s[i.rid]=i,console.debug(`MODIFY Post ${i.rid} success.`))}else this.#e.unshift(i),this.#s[i.rid]=i,console.debug(`CREATE Post ${i.rid} success.`);s=i;break}case"delete":{let i=`${t.payload}@${e.domain}`;if(this.#s[i]){let r=this.#e.indexOf(this.#s[i]);r>-1?(this.#e.splice(r,1),console.debug(`DELETE Post ${i} success (${r}).`)):console.warn(`DELETE Post ${i} not found in postStore.`)}else console.warn(`DELETE Post ${i} not found in postRef.`);s=t.payload;break}default:console.error(`Unknown message type ${t.event} from ${e.domain}.`),console.error(t)}this.#e.sort(this.#l),this.#e.length>this.#a&&this.#e.splice(this.#a,this.#e.length-this.#a).forEach(i=>{delete this.#s[i.rid]}),a&&this.dispatchEvent(new MessageEvent(h[t.event]||t.event,{data:s}))}getPosts(){return this.#e}getServers(){return this.#i}startFor(e){e.ws=new WebSocket(`wss://${e.domain}/api/v1/streaming/`),e.ws.addEventListener("open",()=>{e.auth?(e.ws.send(`{"type":"subscribe","stream":"public:local","access_token":"${e.auth||""}"}}`),console.info(`Authenticated local timeline started for ${e.domain}.`)):(e.ws.send('{"type":"subscribe","stream":"public:local"}'),console.info(`Local timeline started for ${e.domain}.`)),e.hook&&(e.ws.send(`{"type":"subscribe","stream":"user","access_token":"${e.auth||""}"}`),console.info(`User stream started for ${e.domain}.`))}),e.ws.addEventListener("message",t=>{let s=JSON.parse(t.data);this.receiver.call(this,e,s)}),e.ws.addEventListener("close",()=>{AbortSignal.timeout(3e3).onabort=()=>{this.startFor(e)}})}launch(e){this.#o||(this.#i.forEach(async t=>{if(console.info(`Starting for ${t.domain}.`),console.debug(t),this.startFor.call(this,t),!e){let s={headers:{}};t.auth&&(s.headers.Authorization=`Bearer ${t.auth}`);let a=await fetch(`https://${t.domain}/api/v1/timelines/public?local=true&only_media=false&limit=${c.pageSize}`,s);a.status==200?(await a.json())?.forEach(o=>{this.receiver(t,{event:"update",payload:o})}):(console.error(`Post fetching for ${t.domain} failed: ${a.status} ${a.statusText}`),console.error(await a.json()))}}),this.#o=!0)}constructor({servers:e,serversCw:t,instance:s,serversTk:a,streamOnly:o=!1,filePath:n="./auth.json"}){super(),e?.forEach(i=>{let r={domain:i,ws:void 0,cw:!1,hook:i==s,auth:!1};this.#r[i]=this.#i.length,this.#i.push(r)}),t?.forEach(i=>{let r={domain:i,ws:void 0,cw:!0,hook:i==s,auth:!1};this.#r[i]=this.#i.length,this.#i.push(r)}),a?.forEach(i=>{this.#i[this.#r[i[0]]].auth=i[1]}),this.#n=s,this.launch(o)}};export{d as MastodonClient};
