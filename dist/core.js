"use strict";(()=>{var S="currentTarget,explicitOriginalTarget,originalTarget,srcElement,target".split(",");var v={account:"user",application:"app",content:"text",created_at:"atNew",edited_at:"atEdit",favourites_count:"sumFav",in_reply_to_account_id:"replyUser",in_reply_to_id:"replyPost",language:"lang",media_attachments:"media",mentions:"ats",reblog:"boost",reblogs_count:"sumBoost",replies_count:"sumReply",sensitive:"cwReal",spoiler_text:"cwText",visibility:"access",followers_count:"sumFan",following_count:"sumSub",display_name:"dispName",avatar_static:"avatarStatic",header_static:"headerStatic",statuses_count:"sumPost",last_status_at:"atLastPost",noindex:"noIndex",verified_at:"atVerify",shortcode:"code",static_url:"static",visible_in_picker:"inPicker",expires_at:"atExpire",votes_count:"sumVote",voters_count:"sumVoter",website:"site",preview_url:"preview",remote_url:"remote",preview_remote_url:"previewRemote",text_url:"text",description:"alt"},y={update:"postNew","status.update":"postEdit",delete:"postDel"},g={maxAge:2592e5,maxCount:100,pageSize:40},w=class extends EventTarget{#a=100;#d=2592e5;#o="";#u;#s=[];#r={};#h=[];#f=[];#p=[];#e=[];#i={};#n=!1;USER_NORMAL=0;USER_NOEXEMPT=1;USER_EXCLUDED=2;filePath="";#l(e,t){return(t.atNew||0)-(e.atNew||0)}#E(){}#m(){}#v(){}#t(e){for(let t in e)v[t]&&(e[v[t]]=e[t],delete e[t]);return e.atNew&&(e.atNew=new Date(e.atNew).getTime()),e.atEdit&&(e.atEdit=new Date(e.atEdit).getTime()),e.atVerify&&(e.atVerify=new Date(e.atVerify).getTime()),e.atExpire&&(e.atExpire=new Date(e.atExpire).getTime()),e.app&&this.#t(e.app),e.user&&this.#t(e.user),e.media?.forEach(t=>{this.#t(t)}),e.emojis?.forEach(t=>{this.#t(t)}),e.ats?.forEach(t=>{this.#t(t)}),e.user&&e.user.fields?.forEach(t=>{this.#t(t)}),e.poll&&(e.poll.options?.forEach(t=>{this.#t(t)}),this.#t(e.poll)),e}#c(e,t){return this.#t(e),e?.user?.username&&(e.handle=`@${e.user.username}@${t.domain}`),e.rid=`${e.id}@${t.domain}`,e}receiver(e,t){let a,o=!0,c=Date.now(),f=c-g.maxAge;switch(t.event){case"update":case"status.update":{let s=t.payload.constructor==String?JSON.parse(t.payload):t.payload;if(this.#c(s,e),s.atNew<f){o=!1;break}if(this.#i[s.rid]){let n=this.#e.indexOf(this.#i[s.rid]);n>-1&&(this.#e[n]=s,this.#i[s.rid]=s,console.debug(`MODIFY Post ${s.rid} success.`))}else this.#e.unshift(s),this.#i[s.rid]=s,console.debug(`CREATE Post ${s.rid} success.`);a=s;break}case"delete":{let s=`${t.payload}@${e.domain}`;if(this.#i[s]){let n=this.#e.indexOf(this.#i[s]);n>-1?(this.#e.splice(n,1),console.debug(`DELETE Post ${s} success (${n}).`)):console.warn(`DELETE Post ${s} not found in postStore.`)}else console.warn(`DELETE Post ${s} not found in postRef.`);a=t.payload;break}default:console.error(`Unknown message type ${t.event} from ${e.domain}.`),console.error(t)}this.#e.sort(this.#l),this.#e.length>this.#a&&this.#e.splice(this.#a,this.#e.length-this.#a).forEach(s=>{delete this.#i[s.rid]}),o&&this.dispatchEvent(new MessageEvent(y[t.event]||t.event,{data:a}))}getPosts(){return this.#e}getServers(){return this.#s}startFor(e){e.ws=new WebSocket(`wss://${e.domain}/api/v1/streaming/`),e.ws.addEventListener("open",()=>{e.auth?(e.ws.send(`{"type":"subscribe","stream":"public:local","access_token":"${e.auth||""}"}}`),console.info(`Authenticated local timeline started for ${e.domain}.`)):(e.ws.send('{"type":"subscribe","stream":"public:local"}'),console.info(`Local timeline started for ${e.domain}.`)),e.hook&&(e.ws.send(`{"type":"subscribe","stream":"user","access_token":"${e.auth||""}"}`),console.info(`User stream started for ${e.domain}.`))}),e.ws.addEventListener("message",t=>{let a=JSON.parse(t.data);this.receiver.call(this,e,a)}),e.ws.addEventListener("close",()=>{AbortSignal.timeout(3e3).onabort=()=>{this.startFor(e)}})}launch(e){this.#n||(this.#s.forEach(async t=>{if(console.info(`Starting for ${t.domain}.`),console.debug(t),this.startFor.call(this,t),!e){let a={headers:{}};t.auth&&(a.headers.Authorization=`Bearer ${t.auth}`);let o=await fetch(`https://${t.domain}/api/v1/timelines/public?local=true&only_media=false&limit=${g.pageSize}`,a);o.status==200?(await o.json())?.forEach(c=>{this.receiver(t,{event:"update",payload:c})}):(console.error(`Post fetching for ${t.domain} failed: ${o.status} ${o.statusText}`),console.error(await o.json()))}}),this.#n=!0)}constructor({servers:e,serversCw:t,instance:a,serversTk:o,streamOnly:c=!1,filePath:f="./auth.json"}){super(),e?.forEach(s=>{let n={domain:s,ws:void 0,cw:!1,hook:s==a,auth:!1};this.#r[s]=this.#s.length,this.#s.push(n)}),t?.forEach(s=>{let n={domain:s,ws:void 0,cw:!0,hook:s==a,auth:!1};this.#r[s]=this.#s.length,this.#s.push(n)}),o?.forEach(s=>{this.#s[this.#r[s[0]]].auth=s[1]}),this.#o=a,this.launch(c)}};var m=new TextEncoder("utf-8"),x=async function(e){let t=`Silk@${WingBlade.variant}`;switch(console.debug(`${t} - Better Together`),e[0]||"serve"){case"login":{console.error("Deprecated."),WingBlade.exit(0);break}case"serve":{console.error("Starting the Silk server!");let a=WingBlade.getEnv("LIST_SERVER")?.split(",")||[],o=WingBlade.getEnv("LIST_SERVER_CW")?.split(",")||[],c=WingBlade.getEnv("LIST_SERVER_TK")?.split(",")||[],f=WingBlade.getEnv("HOOK_SERVER"),s=WingBlade.getEnv("NO_BATCH_REQUEST","0")=="1";f||console.error("Hook server not defined!"),c.forEach((r,l,i)=>{let u=r.indexOf("=");u>-1&&(i[l]=[r.slice(0,u),r.slice(u+1)])});let n={servers:a,serversCw:o,serversTk:c,instance:f,streamOnly:s};console.info(n);let d=new w(n),p=m.encode("[]"),h=[];d.addEventListener("postNew",async({data:r})=>{let l=`{"event":"set","data":${JSON.stringify(r)}}`;h.forEach(async i=>{i.send(l)}),p=m.encode(JSON.stringify(d.getPosts()))}),d.addEventListener("postEdit",async({data:r})=>{let l=`{"event":"set","data":${JSON.stringify(r)}}`;h.forEach(async i=>{i.send(l)}),p=m.encode(JSON.stringify(d.getPosts()))}),d.addEventListener("postDel",async({data:r})=>{let l=`{"event":"delete","data":${JSON.stringify(r)}}`;h.forEach(async i=>{i.send(l)}),p=m.encode(JSON.stringify(d.getPosts()))}),WingBlade.serve(r=>{let l=new URL(r.url);switch(r.method?.toLowerCase()){case"get":{switch(l.pathname){case"/nr/silk/servers":{let i=[];return d.getServers().forEach(({domain:u,cw:E,ws:_})=>{i.push({domain:u,cw:E,active:_.readyState==1})}),new Response(JSON.stringify(i),{status:200,headers:{"content-type":"application/json",server:t}});break}case"/nr/silk/timeline":case"/nr/silk/timeline/":return new Response(p,{status:200,headers:{"content-type":"application/json",server:t}});case"/rt/silk/timeline":case"/rt/silk/timeline/":{if(r.headers.get("upgrade")=="websocket"){let{socket:i,response:u}=WingBlade.upgradeWebSocket(r);return i.addEventListener("open",()=>{i.send('{"event":"ack"}'),h.push(i)}),i.addEventListener("close",()=>{let E=h.indexOf(i);E>-1&&h.splice(E,1)}),u}else return new Response("SSE isn't supported yet.",{status:400,server:t});break}default:return new Response(`Endpoint ${l.pathname} not found.`,{status:404,server:t})}break}default:return new Response("Method disallowed.",{status:405,server:t})}});break}default:console.error(`Unknown subcommand "${e.join(" ")}"`)}};})();
