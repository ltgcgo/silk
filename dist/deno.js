"use strict";(()=>{function y(){let t,e="pending",r=new Promise((s,i)=>{t={async resolve(a){await a,e="fulfilled",s(a)},reject(a){e="rejected",i(a)}}});return Object.defineProperty(r,"state",{get:()=>e}),Object.assign(r,t)}function T(t,e={}){let{signal:r,persistent:s}=e;return r?.aborted?Promise.reject(new DOMException("Delay was aborted.","AbortError")):new Promise((i,a)=>{let n=()=>{clearTimeout(d),a(new DOMException("Delay was aborted.","AbortError"))},d=setTimeout(()=>{r?.removeEventListener("abort",n),i()},t);if(r?.addEventListener("abort",n,{once:!0}),s===!1)try{Deno.unrefTimer(d)}catch(u){if(!(u instanceof ReferenceError))throw u;console.error("`persistent` option is only available in Deno")}})}var b=class{#s=0;#n=[];#i=[];#t=y();add(e){++this.#s,this.#e(e[Symbol.asyncIterator]())}async#e(e){try{let{value:r,done:s}=await e.next();s?--this.#s:this.#n.push({iterator:e,value:r})}catch(r){this.#i.push(r)}this.#t.resolve()}async*iterate(){for(;this.#s>0;){await this.#t;for(let e=0;e<this.#n.length;e++){let{iterator:r,value:s}=this.#n[e];yield s,this.#e(r)}if(this.#i.length){for(let e of this.#i)throw e;this.#i.length=0}this.#n.length=0,this.#t=y()}}[Symbol.asyncIterator](){return this.iterate()}},m="Server closed",$=5,R=1e3,v=class{#s;#n;#i;#t=!1;#e=new Set;#l=new AbortController;#c=new Set;#h;constructor(e){this.#s=e.port,this.#n=e.hostname,this.#i=e.handler,this.#h=e.onError??function(r){return console.error(r),new Response("Internal Server Error",{status:500})}}async serve(e){if(this.#t)throw new Deno.errors.Http(m);this.#u(e);try{return await this.#o(e)}finally{this.#p(e);try{e.close()}catch{}}}async listenAndServe(){if(this.#t)throw new Deno.errors.Http(m);let e=Deno.listen({port:this.#s??80,hostname:this.#n??"0.0.0.0",transport:"tcp"});return await this.serve(e)}async listenAndServeTls(e,r){if(this.#t)throw new Deno.errors.Http(m);let s=Deno.listenTls({port:this.#s??443,hostname:this.#n??"0.0.0.0",certFile:e,keyFile:r,transport:"tcp"});return await this.serve(s)}close(){if(this.#t)throw new Deno.errors.Http(m);this.#t=!0;for(let e of this.#e)try{e.close()}catch{}this.#e.clear(),this.#l.abort();for(let e of this.#c)this.#d(e);this.#c.clear()}get closed(){return this.#t}get addrs(){return Array.from(this.#e).map(e=>e.addr)}async#f(e,r){let s;try{if(s=await this.#i(e.request,r),s.bodyUsed&&s.body!==null)throw new TypeError("Response body already consumed.")}catch(i){s=await this.#h(i)}try{await e.respondWith(s)}catch{}}async#r(e,r){for(;!this.#t;){let s;try{s=await e.nextRequest()}catch{break}if(s===null)break;this.#f(s,r)}this.#d(e)}async#o(e){let r;for(;!this.#t;){let s;try{s=await e.accept()}catch(n){if(n instanceof Deno.errors.BadResource||n instanceof Deno.errors.InvalidData||n instanceof Deno.errors.UnexpectedEof||n instanceof Deno.errors.ConnectionReset||n instanceof Deno.errors.NotConnected){r?r*=2:r=$,r>=1e3&&(r=R);try{await T(r,{signal:this.#l.signal})}catch(o){if(!(o instanceof DOMException&&o.name==="AbortError"))throw o}continue}throw n}r=void 0;let i;try{i=Deno.serveHttp(s)}catch{continue}this.#w(i);let a={localAddr:s.localAddr,remoteAddr:s.remoteAddr};this.#r(i,a)}}#d(e){this.#m(e);try{e.close()}catch{}}#u(e){this.#e.add(e)}#p(e){this.#e.delete(e)}#w(e){this.#c.add(e)}#m(e){this.#c.delete(e)}};function C(t){return t==="0.0.0.0"?"localhost":t}async function S(t,e={}){let r=e.port??8e3,s=e.hostname??"0.0.0.0",i=new v({port:r,hostname:s,handler:t,onError:e.onError});e?.signal?.addEventListener("abort",()=>i.close(),{once:!0});let a=i.listenAndServe();return r=i.addrs[0].port,"onListen"in e?e.onListen?.({port:r,hostname:s}):console.log(`Listening on http://${C(s)}:${r}/`),await a}var g={args:Deno.args,os:Deno.build.os,variant:"Deno",version:Deno.version.deno,persist:!0,exit:(t=0)=>{Deno.exit(t)},getEnv:(t,e)=>Deno.env.get(t)||e,memUsed:()=>Deno.memoryUsage(),randomInt:t=>Math.floor(Math.random()*t),readFile:async function(t,e){return await Deno.readFile(t,e)},serve:(t,e={})=>(e?.onListen||(e.onListen=function({port:r,hostname:s}){console.error(`WingBlade serving at http://${s}:${r}`)}),e?.hostname||(e.hostname="127.0.0.1"),e?.port||(e.port=8e3),S(t,e)),setEnv:(t,e)=>Deno.env.set(t,e),sleep:function(t,e=0){return new Promise((r,s)=>{AbortSignal.timeout(t+Math.floor(e*Math.random())).addEventListener("abort",()=>{r()})})},upgradeWebSocket(t,e){return Deno.upgradeWebSocket(t,e)},writeFile:async function(t,e,r){await Deno.writeFile(t,e,r)}};var B="currentTarget,explicitOriginalTarget,originalTarget,srcElement,target".split(",");var _={account:"user",application:"app",content:"text",created_at:"atNew",edited_at:"atEdit",favourites_count:"sumFav",in_reply_to_account_id:"replyUser",in_reply_to_id:"replyPost",language:"lang",media_attachments:"media",mentions:"ats",reblog:"boost",reblogs_count:"sumBoost",replies_count:"sumReply",sensitive:"cwReal",spoiler_text:"cwText",visibility:"access",followers_count:"sumFan",following_count:"sumSub",display_name:"dispName",avatar_static:"avatarStatic",header_static:"headerStatic",statuses_count:"sumPost",last_status_at:"atLastPost",noindex:"noIndex",verified_at:"atVerify",shortcode:"code",static_url:"static",visible_in_picker:"inPicker",expires_at:"atExpire",votes_count:"sumVote",voters_count:"sumVoter",website:"site",preview_url:"preview",remote_url:"remote",preview_remote_url:"previewRemote",text_url:"text",description:"alt"},O={update:"postNew","status.update":"postEdit",delete:"postDel"},D={maxAge:2592e5,maxCount:100,pageSize:40},k=class extends EventTarget{#s=100;#n=2592e5;#i="";#t;#e=[];#l={};#c=[];#h=[];#f=[];#r=[];#o={};#d=!1;USER_NORMAL=0;USER_NOEXEMPT=1;USER_EXCLUDED=2;filePath="";#u(t,e){return(e.atNew||0)-(t.atNew||0)}#p(){}#w(){}#m(){}#a(t){for(let e in t)_[e]&&(t[_[e]]=t[e],delete t[e]);return t.atNew&&(t.atNew=new Date(t.atNew).getTime()),t.atEdit&&(t.atEdit=new Date(t.atEdit).getTime()),t.atVerify&&(t.atVerify=new Date(t.atVerify).getTime()),t.atExpire&&(t.atExpire=new Date(t.atExpire).getTime()),t.app&&this.#a(t.app),t.user&&this.#a(t.user),t.media?.forEach(e=>{this.#a(e)}),t.emojis?.forEach(e=>{this.#a(e)}),t.ats?.forEach(e=>{this.#a(e)}),t.user&&t.user.fields?.forEach(e=>{this.#a(e)}),t.poll&&(t.poll.options?.forEach(e=>{this.#a(e)}),this.#a(t.poll)),t}#E(t,e){return this.#a(t),t?.user?.username&&(t.handle=`@${t.user.username}@${e.domain}`),t.rid=`${t.id}@${e.domain}`,t}receiver(t,e){let r,s=!0,i=Date.now(),a=i-D.maxAge;switch(e.event){case"update":case"status.update":{let n=e.payload.constructor==String?JSON.parse(e.payload):e.payload;if(this.#E(n,t),n.atNew<a){s=!1;break}if(this.#o[n.rid]){let o=this.#r.indexOf(this.#o[n.rid]);o>-1&&(this.#r[o]=n,this.#o[n.rid]=n,console.debug(`MODIFY Post ${n.rid} success.`))}else this.#r.unshift(n),this.#o[n.rid]=n,console.debug(`CREATE Post ${n.rid} success.`);r=n;break}case"delete":{let n=`${e.payload}@${t.domain}`;if(this.#o[n]){let o=this.#r.indexOf(this.#o[n]);o>-1?(this.#r.splice(o,1),console.debug(`DELETE Post ${n} success (${o}).`)):console.warn(`DELETE Post ${n} not found in postStore.`)}else console.warn(`DELETE Post ${n} not found in postRef.`);r=e.payload;break}default:console.error(`Unknown message type ${e.event} from ${t.domain}.`),console.error(e)}this.#r.sort(this.#u),this.#r.length>this.#s&&this.#r.splice(this.#s,this.#r.length-this.#s).forEach(n=>{delete this.#o[n.rid]}),s&&this.dispatchEvent(new MessageEvent(O[e.event]||e.event,{data:r}))}getPosts(){return this.#r}getServers(){return this.#e}startFor(t){t.ws=new WebSocket(`wss://${t.domain}/api/v1/streaming/`),t.ws.addEventListener("open",()=>{t.auth?(t.ws.send(`{"type":"subscribe","stream":"public:local","access_token":"${t.auth||""}"}}`),console.info(`Authenticated local timeline started for ${t.domain}.`)):(t.ws.send('{"type":"subscribe","stream":"public:local"}'),console.info(`Local timeline started for ${t.domain}.`)),t.hook&&(t.ws.send(`{"type":"subscribe","stream":"user","access_token":"${t.auth||""}"}`),console.info(`User stream started for ${t.domain}.`))}),t.ws.addEventListener("message",e=>{let r=JSON.parse(e.data);this.receiver.call(this,t,r)}),t.ws.addEventListener("close",()=>{AbortSignal.timeout(3e3).onabort=()=>{this.startFor(t)}})}launch(t){this.#d||(this.#e.forEach(async e=>{if(console.info(`Starting for ${e.domain}.`),console.debug(e),this.startFor.call(this,e),!t){let r={headers:{}};e.auth&&(r.headers.Authorization=`Bearer ${e.auth}`);let s=await fetch(`https://${e.domain}/api/v1/timelines/public?local=true&only_media=false&limit=${D.pageSize}`,r);s.status==200?(await s.json())?.forEach(i=>{this.receiver(e,{event:"update",payload:i})}):(console.error(`Post fetching for ${e.domain} failed: ${s.status} ${s.statusText}`),console.error(await s.json()))}}),this.#d=!0)}constructor({servers:t,serversCw:e,instance:r,serversTk:s,streamOnly:i=!1,filePath:a="./auth.json"}){super(),t?.forEach(n=>{let o={domain:n,ws:void 0,cw:!1,hook:n==r,auth:!1};this.#l[n]=this.#e.length,this.#e.push(o)}),e?.forEach(n=>{let o={domain:n,ws:void 0,cw:!0,hook:n==r,auth:!1};this.#l[n]=this.#e.length,this.#e.push(o)}),s?.forEach(n=>{this.#e[this.#l[n[0]]].auth=n[1]}),this.#i=r,this.launch(i)}};var E=new TextEncoder("utf-8"),x=async function(t){let e=`Silk@${WingBlade.variant}`;switch(console.debug(`${e} - Better Together`),t[0]||"serve"){case"login":{console.error("Deprecated."),WingBlade.exit(0);break}case"serve":{console.error("Starting the Silk server!");let r=WingBlade.getEnv("LIST_SERVER")?.split(",")||[],s=WingBlade.getEnv("LIST_SERVER_CW")?.split(",")||[],i=WingBlade.getEnv("LIST_SERVER_TK")?.split(",")||[],a=WingBlade.getEnv("HOOK_SERVER"),n=WingBlade.getEnv("NO_BATCH_REQUEST","0")=="1";a||console.error("Hook server not defined!"),i.forEach((c,h,l)=>{let f=c.indexOf("=");f>-1&&(l[h]=[c.slice(0,f),c.slice(f+1)])});let o={servers:r,serversCw:s,serversTk:i,instance:a,streamOnly:n};console.info(o);let d=new k(o),u=E.encode("[]"),p=[];d.addEventListener("postNew",async({data:c})=>{let h=`{"event":"set","data":${JSON.stringify(c)}}`;p.forEach(async l=>{l.send(h)}),u=E.encode(JSON.stringify(d.getPosts()))}),d.addEventListener("postEdit",async({data:c})=>{let h=`{"event":"set","data":${JSON.stringify(c)}}`;p.forEach(async l=>{l.send(h)}),u=E.encode(JSON.stringify(d.getPosts()))}),d.addEventListener("postDel",async({data:c})=>{let h=`{"event":"delete","data":${JSON.stringify(c)}}`;p.forEach(async l=>{l.send(h)}),u=E.encode(JSON.stringify(d.getPosts()))}),WingBlade.serve(c=>{let h=new URL(c.url);switch(c.method?.toLowerCase()){case"get":{switch(h.pathname){case"/nr/silk/servers":{let l=[];return d.getServers().forEach(({domain:f,cw:w,ws:L})=>{l.push({domain:f,cw:w,active:L.readyState==1})}),new Response(JSON.stringify(l),{status:200,headers:{"content-type":"application/json",server:e}});break}case"/nr/silk/timeline":case"/nr/silk/timeline/":return new Response(u,{status:200,headers:{"content-type":"application/json",server:e}});case"/rt/silk/timeline":case"/rt/silk/timeline/":{if(c.headers.get("upgrade")=="websocket"){let{socket:l,response:f}=WingBlade.upgradeWebSocket(c);return l.addEventListener("open",()=>{l.send('{"event":"ack"}'),p.push(l)}),l.addEventListener("close",()=>{let w=p.indexOf(l);w>-1&&p.splice(w,1)}),f}else return new Response("SSE isn't supported yet.",{status:400,server:e});break}default:return new Response(`Endpoint ${h.pathname} not found.`,{status:404,server:e})}break}default:return new Response("Method disallowed.",{status:405,server:e})}});break}default:console.error(`Unknown subcommand "${t.join(" ")}"`)}};self.WingBlade=g;x(g.args);})();
